(function () {
  "use strict";

  var FuzzyMatch = {
    escapeIfSpecial: function (item) {
      var specials = ['^', '$', '.', '|', '[', ']', '(', ')', '{', '}', ':', '*', '+', '?', '\\', '-'];

      if (specials.indexOf(item) > -1) {
        return '\\' + item;
      } else {
        return item;
      }
    },

    getRegExpString: function (search) {
      // Found: http://www.quora.com/Algorithms/How-is-the-fuzzy-search-algorithm-in-Sublime-Text-designed
      // Alternative: http://stackoverflow.com/questions/16907825/how-to-implement-sublime-text-like-fuzzy-search
      var r = search.split('').map(function (item) {
        return FuzzyMatch.escapeIfSpecial(item);
      });

      return r;
    },

    contains: function (text, search) {
      var
        r = FuzzyMatch.getRegExpString(search),
        re = new RegExp(r.join('.*?'), 'i')
      ;

      return re.test(text);
    },

    startsWith: function (text, search, prepend) {
      var
        pre = prepend || '',
        r = FuzzyMatch.getRegExpString(search),
        re = new RegExp('^' + FuzzyMatch.escapeIfSpecial(pre) + r.join('.*?'), 'i')
      ;

      return re.test(text);
    }
  };

  window.FuzzyMatch = FuzzyMatch;
}());

(function () {
  "use strict";

  var
    items = [],
    topics = document.querySelectorAll('.topics > li'),
    totalTopics = topics.length, i = 0,
    input, form,
    displayResults = function (val) {
      items.forEach(function (item, index) {
        if (val) {
          if (item.tags && FuzzyMatch.contains(item.tags, val)) {
            item.elem.hidden = false;
          } else {
            item.elem.hidden = true;
          }
        } else {
          item.elem.hidden = false;
        }
      });
    }
  ;

  if (!topics.length) {
    return;
  }

  input = document.getElementById('search'),
  form = document.querySelector('form')
  form.hidden = false;

  for (i = 0; i < totalTopics; i++) {
    items.push({
      tags: topics[i].getAttribute('data-tags'),
      elem: topics[i]
    });
  }

  form.addEventListener('submit', function (e) {
    e.preventDefault();
    return false;
  });

  input.addEventListener('keyup', function (e) {
    displayResults(input.value);
  });

  input.addEventListener('blur', function (e) {
    displayResults(input.value);
  });
}());

(function () {
  "use strict";

  var
    links = document.querySelectorAll('.topics a'),
    i = 0, t = links.length,
    simplifyPath = function (path) {
      return path.replace('/topics/', '').replace('/', '');
    },
    isLocal = function (link) {
      return (link.host === window.location.host);
    },
    isVisited = function (link) {
      var p = simplifyPath(link.pathname);

      return !!(localStorage.getItem('visited-' + p));
    }
  ;

  for (i; i<t; i++) {
    if (isLocal(links[i]) && isVisited(links[i])) {
      links[i].setAttribute('data-visited', true);
    }
  }
}());
